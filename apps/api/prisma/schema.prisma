generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int        @id @default(autoincrement())
  email            String     @unique
  passwordHash     String
  name             String?
  role             String     @default("USER") // ðŸ‘ˆ Rolle fÃ¼r spÃ¤tere RechteprÃ¼fung
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  customers        Customer[] // ðŸ‘ˆ VerknÃ¼pfung: Ein User hat mehrere Kunden
  advisedCustomers Customer[] @relation("AdvisorRelation")
}

model Customer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Basisdaten
  category  String? // Privatperson, Unternehmen
  advisorId Int? // optionaler Berater
  advisor   User?   @relation("AdvisorRelation", fields: [advisorId], references: [id])
  language  String? // DE, FR, IT, EN
  noContact Boolean @default(false)

  // PersÃ¶nliche Informationen
  gender          String?
  salutation      String? // Herr, Frau
  firstName       String?
  lastName        String?
  maritalStatus   String? // ledig, verheiratet, etc.
  birthDate       String?
  ahvNumber       String? @unique
  nationality     String?
  foreignPermit   String?
  livingSituation String?
  occupation      String?
  // Adresse
  street          String?
  zip             Int?
  city            String?

  // Kontakt
  mobileCode        String?
  mobile            String?
  workPhoneCode     String?
  workPhone         String?
  privateEmailPart1 String?
  privateEmailPart2 String?
  workEmailPart1    String?
  workEmailPart2    String?

  recommendation        String?
  relationToRecommender String?

  // Relation zu User (wer hat den Kunden angelegt)
  userId  Int
  user    User    @relation(fields: [userId], references: [id])
  deleted Boolean @default(false)
}
